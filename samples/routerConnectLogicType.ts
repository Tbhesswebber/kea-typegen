// Generated by kea-typegen on Tue, 13 Jul 2021 22:19:33 GMT. DO NOT EDIT THIS FILE MANUALLY.

import { Logic } from 'kea'

export interface routerConnectLogicType extends Logic {
    actionCreators: {
        locationChanged: ({
            method,
            pathname,
            search,
            searchParams,
            hash,
            hashParams,
            initial,
        }: {
            method: 'PUSH' | 'REPLACE' | 'POP'
            pathname: string
            search: string
            searchParams: Record<string, any>
            hash: string
            hashParams: Record<string, any>
            url: string
            initial?: boolean
        }) => {
            type: 'location changed (containers.pages.main)'
            payload: {
                method: 'PUSH' | 'REPLACE' | 'POP'
                pathname: string
                search: string
                searchParams: Record<string, any>
                hash: string
                hashParams: Record<string, any>
                initial: boolean
            }
        }
    }
    actionKeys: {
        'location changed (containers.pages.main)': 'locationChanged'
    }
    actionTypes: {
        locationChanged: 'location changed (containers.pages.main)'
    }
    actions: {
        locationChanged: ({
            method,
            pathname,
            search,
            searchParams,
            hash,
            hashParams,
            initial,
        }: {
            method: 'PUSH' | 'REPLACE' | 'POP'
            pathname: string
            search: string
            searchParams: Record<string, any>
            hash: string
            hashParams: Record<string, any>
            url: string
            initial?: boolean
        }) => void
    }
    constants: {}
    defaults: {}
    events: {}
    key: undefined
    listeners: {
        locationChanged: ((
            action: {
                type: 'location changed (containers.pages.main)'
                payload: {
                    method: 'PUSH' | 'REPLACE' | 'POP'
                    pathname: string
                    search: string
                    searchParams: Record<string, any>
                    hash: string
                    hashParams: Record<string, any>
                    initial: boolean
                }
            },
            previousState: any,
        ) => void | Promise<void>)[]
    }
    path: ['containers', 'pages', 'main']
    pathString: 'containers.pages.main'
    props: Record<string, unknown>
    reducer: (state: any, action: () => any, fullState: any) => {}
    reducerOptions: {}
    reducers: {}
    selector: (state: any) => {}
    selectors: {}
    sharedListeners: {}
    values: {}
    _isKea: true
    _isKeaWithKey: false
}
